basePath: /
definitions:
  handlers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.Note:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
    required:
    - title
    type: object
host: localhost:8000
info:
  contact: {}
  description: CRUD application for notes
  title: CRUD APP
  version: "1.1"
paths:
  /api/items/:
    get:
      consumes:
      - application/json
      description: Get all notes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all notes
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: Create a note by note struct
      parameters:
      - description: Note struct
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.Note'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a note
      tags:
      - Notes
  /api/items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete note by ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete note by ID
      tags:
      - Notes
    get:
      consumes:
      - application/json
      description: Get note by ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get note by ID
      tags:
      - Notes
    put:
      consumes:
      - application/json
      description: Updates a note by ID. Can changes only Title and Description.
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      - description: Note struct
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.Note'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update a note
      tags:
      - Notes
swagger: "2.0"
